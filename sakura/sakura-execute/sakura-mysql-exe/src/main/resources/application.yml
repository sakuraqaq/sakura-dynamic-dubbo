dubbo:
  application:
    name: sakura-provider
  registry:
    address: nacos://127.0.0.1:4399?username=nacos&password=nacos
  scan:
    base-packages: com.sakura.service
  metadata-report:
    address: nacos://127.0.0.1:4399?username=nacos&password=nacos
  protocol:
    serialization: kryo
    name: dubbo

spring:
  main:
    allow-bean-definition-overriding: true
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  shardingsphere:
    datasource:
      names: sharding-order-system1, sharding-order-system2 #数据源名称
      sharding-order-system1:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://rm-bp1jai672vn7r912s1250108m.mysql.rds.aliyuncs.com:3306/aichidoubao01?allowPublicKeyRetrieval=true
        username: sakura01
        password: sakura01
      sharding-order-system2:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://rm-bp1jai672vn7r912s1250108m.mysql.rds.aliyuncs.com:3306/aichidoubao02?allowPublicKeyRetrieval=true
        username: sakura01
        password: sakura01
    props:
      # 日志显示SQL
      sql.show: true
    sharding:
      tables:
        sakura_order:
          actualDataNodes: sharding-order-system$->{1..2}.sakura_order$->{1..2}
          keyGeneratorColumn: project_id
          keyGeneratorType: SNOWFLAKE
          # 分库策略
          databaseStrategy:
            inline:
              shardingColumn: project_id
              algorithmExpression: sharding-order-system$->{project_id % 2 + 1}
          # 分表策略
          tableStrategy:
            inline:
              shardingColumn: project_id
              # 指定分片策略 约定project_id值是偶数添加到1表，如果project_id是奇数添加到2表
              algorithmExpression: sakura_order${project_id % 2 + 1}
        paper:
          actualDataNodes: sharding-order-system$->{1..2}.paper$->{1..2}
          keyGeneratorColumn: paper_id
          keyGeneratorType: SNOWFLAKE
            # 分库策略
          databaseStrategy:
            inline:
              shardingColumn: paper_id
              algorithmExpression: sharding-order-system$->{paper_id % 2 + 1}
          tableStrategy:
            inline:
              shardingColumn: user_id
              algorithmExpression: paper${user_id % 2 + 1}


#  registries:
#    provider1:
#      registry:
#      address: nacos://127.0.0.1:4399?username=nacos&password=nacos
#    provider2:
#      registry:
#      address: nacos://127.0.0.1:4396?username=nacos&password=nacos&namespace=test
mybatis:
  mapper-locations: classpath*:mapper/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    com:
      sakura:
        mapper: debug
